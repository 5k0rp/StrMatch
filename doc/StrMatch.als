{"Shell",
	{"Folder","AST","Нечеткое сравнение строк","",
		{"Item","AST","Преамбула","","Что это такое","",
"
@Версия:
2.1.1
10 февраля 2005г.

Компонента используется для ""Нечеткого"" сравнения и поиска наиболее ""похожей"" строки.

Автор: Ракунов Александр.
E-mail: @Skorp@newmail.ru
ICQ#: 63919227

@Компилятор:
MS Visual C++ .NET 2003
"
		},
		{"Item","AST","Подключение","","Пример подключения компоненты","",
"
ВНИМАНИЕ! Компонента требует для работы mfc71.dll и msvcr71.dll
Если происходит ошибка загрузки компоненты, проверьте наличие этих файлов в system32, если их нет, то нужно найти в инете (например на filesearch.ru) или взять тут: http://skorp.nm.ru/mfc71.zip

Способ 1:
  StrMatch.dll кладется в одно из этих мест:
	- в папку пользователя, 
	- в каталог с базой или
	- в каталог BIN программы 1С.
  В програмном модуле используется примерно такой код:
	ЗагрузитьВнешнююКомпоненту(""StrMatch.dll"");
	
Способ 2:
  StrMatch.dll засовывается куда угодно
  делается regsvr32 <ПолныйПуть>\StrMatch.dll
  В коде пишем:
	ПодключитьВнешнююКомпоненту(""StrMatchExtension"");
	
  далее в любом месте:
    StrMatch = СоздатьОбъект(""AddIn.StrMatchExtension"");

В остальных примерах считается, что StrMatch инициализирована одним их этих способов.
"
		},
		{"Folder","AST","Атрибуты","",
			{"Item","AST","Версия","Version","Версия","Version","@Синтаксис:
Версия

@Назначение:
  Получение версии текущей загруженой компоненты.

@Возвращаемое значение
  Строка вида ""YY.XX.ZZ"" - версия компоненты
			"	
			},
			{"Item","AST","ВесЧисел","NumWeight","ВесЧисел","NumWeight","@Синтаксис:
ВесЧисел

@Назначение:
  Изменения веса совпадения числовых подстрок по отношению к остальной части строки.
  При инициализации компоненты параметр равен 4;

@Возвращаемое значение
  Текущее значение веса числовых подстрок.

@Пример:
 Сообщить(StrMatch.ВесЧисел);
 Сообщить(StrMatch.Сравнить(""Т/в Виски 100мл"",""100 Whisky т/в""));
 Сообщить(StrMatch.Сравнить(""Т/в Виски 200мл"",""100 Whisky т/в""));
 StrMatch.ВесЧисел = 1; //Такой же как у остальной части
 Сообщить(StrMatch.Сравнить(""Т/в Виски 100мл"",""100 Whisky т/в""));
 Сообщить(StrMatch.Сравнить(""Т/в Виски 200мл"",""100 Whisky т/в""));
Результаты: 60, 40 и 39, 34 соответственно.
			"	
			},

		},
		{"Folder","AST","Методы","",
			{"Item","AST","Сравнить","StrMatch","Сравнить(<?>,)","StrMatch(<?>,)","@Синтаксис:
Сравнить(<Строка1>,<Строка2>)

@Назначение:
  Получение коэффициента схожести двух строк.

@Параметры:
<Строка1> - Первая строка для сравнения.
<Строка2> - Вторая строка для сравнения.

@Возвращаемое значение:
  Возвращает коэффициент схожести двух строк. 
Порядок строк значения не имеет.
Коэффициент не маштабирован, т.е. его максимальное значение не ограничено. Чем коэффициент больше, тем строки более похожи. Использеутся при последовательном сравнении одной строки со списком вариантов.
Строго соблюдается утверждение, что самый большой коэффициент может получится при сравнении с такойже строкой, однако может существовать еще множество строк м таким же коэффициентом.

@Пример:
 Сообщить(StrMatch.Сравнить(""Т/в Виски 100мл Лимитед"",""100 Whisky т/в""));
 Сообщить(StrMatch.Сравнить(""Т/в Виски 100мл Лимитед"",""100 Whisky лимитед т/в""));
 Сообщить(StrMatch.Сравнить(""100 Whisky т/в"",""150 Vodka т/в""));

 Результаты: 62, 104 и 2 соответственно.
			"
			},
			{"Item","AST","ОткрытьПодбор","OpenSet","ОткрытьПодбор(<?>,)","OpenSet(<?>,)","@Синтаксис:
ОткрытьПодбор(<Строка>, <Количество>)

@Назначение:
 Начинает групповую обработку строк, в процессе которой можно сравнить последовательность строк с какой-то одной и выбрать наиболее похожие.

@Параметры:
 <Строка> - Строка с которой будут сравниваться все остальные.
 <Количество> - Количество хранимых значений с максимальными коэффициентами сравнения.

@Возвращаемое значение
 Отсутствует.
			"	
			},
			{"Item","AST","ДобавитьВПодбор","CmpNext","ДобавитьВПодбор(<?>,,)","CmpNext(<?>,,)","@Синтаксис:
ДобавитьВПодбор(<Строка>, <Хеш>, <Имя>)

@Назначение:
 Сравнивает и добавляет следующую строку в открытый подбор.

@Параметры:
 <Строка> - Строка для сравнения.
 <Хеш> - Числовое значение, идентифицирующее строку для получения результатов сравнения.
 <Имя> - Строковое значение, идентифицирующее строку. Тот же <Хеш>, но строковой. Например если код справочника не числовой. Имеет ограничение по длине 64 символа.

@Возвращаемое значение
 Ничего не возвращает.
			"	
			},
			{"Item","AST","ПолучитьИзПодбора","GetItemSet","ПолучитьИзПодбора(<?>,,)","GetItemSet(<?>,,)","@Синтаксис:
ПолучитьИзПодбора(<Ном>, <Имя>, <Инд>)

@Назначение:
 Выбирает строки из добавленных в подбор с максимальным коэффициентом сравнения. По порядку убывания значения коэффициента.
 Также используется для выборки результатов сравнения с кэшем.

@Параметры:
 <Ном> - Номер строки из интервала (1..<Количество>), где Интервал это Количесво, переданное в метод: ОткрытьПодбор
 <Имя> - Строковая переменная в которую вернется имя, переданное при добавлении в подбор.
 <Инд> - Переменная в которую вернется коэффициент похожести.

@Возвращаемое значение
 Хеш код, переданный при добавлении в подбор.

			"	
			},
			{"Item","AST","СоздатьКэш","CreateCash","СоздатьКэш(<?>)","CreateCash(<?>)","@Синтаксис:
СоздатьКэш(<Ид>)

@Назначение:
 Создает внутренне хранилище строк с быстрым последовательным доступом. Рекомендуется использовать для многократного поиска среди одного и тогоже списка вариантов. Количество кэшей не ограничено.

@Параметры:
 <Ид> - Идентификатор кэша, который будет использоваться в дальнейше для работы с этим кэшем. Положительное целое число.

@Возвращаемое значение
 Никакого.
			"	
			},
			{"Item","AST","ДобавитьВКэш","AddToCash","ДобавитьВКэш(<?>,,,)","AddToCash(<?>,,,)","@Синтаксис:
ДобавитьВКэш(<Ид>, <Стр>, <Хеш>, <Имя>)

@Назначение:
 Добавляет в созданный кэш следующую строку.

@Параметры:
 <Ид> - Идентификатор кэша. Положительное целое число переданное в СоздатьКэш.
   остальные аналогичны методу ДобавитьВПодбор()
 <Строка> - Строка для добавления.
 <Хеш> - Числовое значение, идентифицирующее строку.
 <Имя> - Строковое значение, идентифицирующее строку. Тот же <Хеш>, но строковой. Например если код справочника не числовой. Имеет ограничение по длине 64 символа.

@Возвращаемое значение
 Никакого.
			"	
			},
			{"Item","AST","СравнитьСКэшем","CmpWithCash","СравнитьСКэшем(<?>,,)","CmpWithCash(<?>,,)","@Синтаксис:
СравнитьСКэшем(<Ид>, <Стр>, <Кол>)

@Назначение:
 Сравнивает <Строка> со всеми значениями из кэша. Результаты сравнения можно получить используя: ПолучитьИзПодбора()
 Фактически тот метод открывает подбор и прогоняет через него все содержимое кэша.

@Параметры:
 <Ид> - Идентификатор кэша. Положительное целое число. 
   остальные аналогичны методу ОткрытьПодбор()
 <Строка> - Строка с которой будут сравниваться значения из кэша.
 <Количество> - Количество хранимых значений с максимальными коэффициентами сравнения.

@Возвращаемое значение
 Никакого.
			"	
			},
			{"Item","AST","ОчиститьКэш","ClearCash","ОчиститьКэш(<?>)","ClearCash(<?>)","@Синтаксис:
ОчиститьКэш(<Ид>)

@Назначение:
 Удаляет все значения из кэша.

@Параметры:
 <Ид> - Идентификатор кэша. Положительное целое число.

@Возвращаемое значение
 Никакого.
			"	
			},
			{"Item","AST","УдалитьКэш","DeleteCash","УдалитьКэш(<?>)","DeleteCash(<?>)","@Синтаксис:
УдалитьКэш(<Ид>)
@Назначение:
 Удаляет все значения из кэша и удаляет само хранилище.
@Параметры:
 <Ид> - Идентификатор кэша. Положительное целое число.
@Возвращаемое значение
 Никакого.
			"	
			},
			{"Item","AST","СохранитьКэш","SaveCash","СохранитьКэш(<?>)","SaveCash(<?>)","@Синтаксис:
СохранитьКэш(<Ид>, <Имя>)
@Назначение:
 Сохраняет строки, находящиеся в кеше в файл на диске.
@Параметры:
 <Ид> - Идентификатор кэша. Положительное целое число.
 <Имя> - Полное имя файла.
@Возвращаемое значение
 Результат операции: 1 - сохранить удалось, 0 - запись не произведена.
			"	
			},
			{"Item","AST","ЗагрузитьКэш","LoadCash","ЗагрузитьКэш(<?>)","LoadCash(<?>)","@Синтаксис:
УдалитьКэш(<Ид>)
@Назначение:
 Читает сохраненный в файл кеш и создает его в оперативной памяти. При этом, если кеша <Ид> нет, то он создается, если есть - очищается.
@Параметры:
 <Ид> - Идентификатор кэша. Положительное целое число.
 <Имя> - Полное имя файла.
@Возвращаемое значение
 Результат операции: 1 - кеш прочитан, 0 - прочитать не удалось.
			"	
			},
		},

	},
}
